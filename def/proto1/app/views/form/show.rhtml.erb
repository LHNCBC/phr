<% if !@show_header.nil? && @show_header %>
   <%= render({:partial=>'form/header_template', :formats => [:rhtml], :handler => [:erb]}) %>
<% end  %>
<% cache(Rails.env + '/part1'+@form_cache_name  ) do %>
  <% if false %> # don't include the comments
<!-- The @cache_file here can be nil, a relative URL for the page, or
     a hashmap of parameters for url_for. -->
  <% end %>

  <div id="formContent" class="<%=@banner_class%>">

    <div id="form_hdr_phr" class="<%=@banner_class%>">
      <div id="hdr_banner">
        <div id="hdr_banner_text">
          <%= BANNER_ALT_TEXT.html_safe %>
        </div>
        <div id="hdr_banner_img" class="<%=DEMO_SYSTEM ? "demo" : ""%>"></div>
        <%# banner specified as background image in style.css %>
        <%# prevents horizontal bar from appearing just for the banner. %>
      </div>
      <br/>
    </div>


<% end %>  <!-- end part1 form cache -->

<% if !@temp_account_type.nil? %>
<div id="temp_type_hdr"><%= @temp_account_type %></div>
<% end %>
    <div id='saved_notice' style="display: none;">Your changes have been saved.</div>

    <% unless flash[:notice].blank? %>
      <div id="notification"><%= flash[:notice].html_safe %></div>
    <% else %>
      <div id="notification" style="display: none"></div>
    <% end %>
    <% if flash[:error]
         @page_errors = [] if !@page_errors
         if flash[:error].is_a?(String)
           @page_errors << flash[:error].html_safe
         else
           @page_errors += flash[:error]
         end
       end
    %>
    <% if @page_errors && @page_errors.size > 0 %>
      <div id="page_errors">
        <% if @page_errors.size == 1 %>
          <%= @page_errors[0] %>
        <% else %>
          The following problems were found:
          <ul>
            <% @page_errors.each do |e| %><li><%=e%></li><%end%>
          </ul>
        <% end %>
      </div>
    <% else %>
      <div id="page_errors" style="display: none"></div>
    <% end %>

    <%# Add the login page notice, if it exists %>
    <% if @login_notice %>
      <div id="login_page_notice">
        <%= h(@login_notice) %>
      </div>
    <% end %>
    <%# Add the urgent notice, if it exists %>
    <% if @urgent_notice %>
      <div id="urgent_notice">
        <%= h(@urgent_notice) %>
      </div>
    <% end %>

    <%= render({:partial=>'form/form_fields.rhtml', :handlers=>[:erb],
                :locals=>{:form=>@form}}) %>
    <% cache(Rails.env + '/part3'+@form_cache_name) do %>
    <%# turn the cache back on for the rest%>
    <br><p id="reqInfo" class="reqNotice" style="display: none">
            <%= image_tag(asset_path('blank.gif'), :alt=>"star icon", :class=>"requiredImg sprite_icons-phr-required") %>
             indicates required information</p>

  </div>

  <div id="blinder" >
  </div>

  <!-- Notice displayed while a user-initiated save is being performed.-->
  <div id="savingNotice" style="display: none">
   Saving ... Please Wait<br>
   <%= image_tag(asset_path('blank.gif'), :alt=>"") %>
  </div>

  <!-- Notice displayed while a modal popup is being displayed. -->
  <div id="modalNotice" style="display:none">
    This window cannot be accessed<br>
    until you close the <span id="fe_modal_popup_name"></span> window.
  </div>

  <% if @fb_field_types_map %>
    <!-- table used by the FormBuilder form to determine what field -->
    <!-- options fields should be displayed for the field type chosen -->
    <!-- by the user.  Will be empty for all other forms.  -->
    <!--
    <div id=fbFieldsMap style="display: none"><%= @fb_field_types_map %></div>
  <% end %>

  <% if @fb_variable_flds %>
  -->
    <script type="text/javascript">
    var fbFieldsMap = <%= @fb_field_types_map.to_json.html_safe%> ;
    <!-- Hash that carries the ending suffix for the variable fields on -->
    <!-- the form builder.  Key is the target_field; value is the       -->
    <!-- unchanging part of the suffix to be appended to the changing   -->
    <!-- part (the part that increments for each field type).           -->
    var fbVariableFlds = <%= @fb_variable_flds.to_json.html_safe%> ;
    </script>
  <% end %>
  <%= javascript_include_tag "manifest_jquery_show"%>
  <% if form_js_list = @form.form_js %>
    <%= javascript_include_tag *form_js_list %>
  <% end %>
  <script type="text/javascript"
          src="https://ajax.aspnetcdn.com/ajax/jquery.dataTables/1.9.4/jquery.dataTables.min.js">
  </script>
  <script type="text/javascript">
    // The blank image with fingerprint (AKA digest) generated by Asset Pipeline
    // system. It is used for creating a blank image tag which servered as a  
    // space holder for other images defined in css.
    var blankImage = '<%= asset_path 'blank.gif' %>';
  </script>
  <%= javascript_include_tag 'manifest_page_bottom' %>
  <% end  %><!-- end of cache "part3"-->
  <% if !@user.nil? && @user.admin %>
    <%= render({:partial=>'form/rule_vals_table.rhtml', :handlers=>[:erb]}) %>
  <% end %>

<script type="text/javascript">
  // Validation scripts
  Def.Validation.Base.UniqueValuesByField_ = <%= @unique_values_by_field.to_json.html_safe %>

  // flag indicating that the form request was diverted from the
  // Flowsheet (panel_view to the Add Tests & Measures form (panel_edit)
  <% if @diverted_to_panel_edit %>
    var divertedToPanelEdit = <%= @diverted_to_panel_edit %> ;
  <%  else %>
    divertedToPanelEdit = false ;
  <% end %>

  // The dom:loaded event is defined by Prototype 1.6
  // If browser is IE (any vesion) use document.observer instead of Event.observe for 'dom:loaded'
  var loadData = function() {
    try {
      <% if !@show_header.nil? && @show_header && !@user.nil? %>
         $('fe_user_name').innerHTML = '<%= @user.name %>' ;
      <% end%>
      var dataHash = <%= @form_data && !@form_data.empty? ? 'null' : @data_hash.to_json.html_safe %>;
      var formData = <%= @form_data.to_json.html_safe %>;
      <% if @form_autosaves && !@access_level.nil? && 
          @access_level < ProfilesUser::READ_ONLY_ACCESS &&
          @access_level > ProfilesUser::NO_PROFILE_ACTIVE %>
        var formAutosaves = <%= @form_autosaves %> ;
      <% else %>
        var formAutosaves = false ;
      <% end %>
      <% if @recovered_data %>
        var recoveredData = <%= @recovered_data.to_json.html_safe%> ;
      <% else  %>
        var recoveredData = null ;
      <% end %>

      Def.accessLevel_ = <%= @access_level %>
      
      <% if @max_autosave_kb %>
      //  Def.AutoSave.MAX_AUTOSAVE_SIZE = <%= @max_autosave_kb %> * 1024 ;
      <% else %>
      //  Def.AutoSave.MAX_AUTOSAVE_SIZE = null ;
      <% end %>
      <% if @overflow_at_start %>
      //  Def.AutoSave.stopAutosave_ = true ;
      <% end %>
      if (formData && formData.length > 0) {
        Def.DataModel.setup(formData, true, recoveredData, formAutosaves);
        <%#= Updates the idShown_ value of message manager using id_shown_ from data model %>
        if (Def.DataModel.id_shown_){
          var fids = Def.messageFieldIds_;
          if (fids.length > 0) {
            for (var i = 0, max = fids.length; i < max; i++)
              $(fids[i]).messageManager.idShown_ = Def.DataModel.id_shown_;
          }
        }
      }

      if (formAutosaves) {
        Def.AutoSave.resetData(formData[0], recoveredData != null) ;
      }
      dataLoaderAndDependentSetups(dataHash);
      <% if !@user.blank? %>
        // Adds listeners for session timeout purpose
        Def.Idle.initEvents();
      <% end %>

      <% if Rails.env != 'test' %>
        Def.UsageMonitor.setTimer();
      <% else %>
        Def.inTestMode_ = true ;
      <% end %>

      // Only record the form_opened event if the user is successfully logged in
      <% if session[:user_id] %>
        Def.formName_ = <%= @form.form_name.to_json.html_safe%>;
        if (Def.formName_ == 'PHR')
          Def.formTitle_ = 'PHR' ;
        else if (Def.formName_ == 'panel_view')
          Def.formTitle_ = "View & Edit Results Timeline" ;
        else
          Def.formTitle_ = <%= @form.form_title.to_json.html_safe%> ;
        Def.UsageMonitor.add('form_opened', {"form_name":Def.formName_,
                                             "form_title":Def.formTitle_}) ;
        $J(document).ready(function() {
          $J(window).focus(function() {
            Def.UsageMonitor.add('focus_on', {"form_name":Def.formName_,
                                              "form_title":Def.formTitle_});
          });
          $J(window).blur(function() {
            Def.UsageMonitor.add('focus_off', {"form_name":Def.formName_,
                                               "form_title":Def.formTitle_});
          });
        });
      <% end %>

      // If there's data needed for form_specific page load code, pass it on
      // here, via Def.pageLoadData_.  If there's no data, it will be set nil.
      <% if !@page_load_data.nil? %>
        Def.pageLoadData_ = <%= @page_load_data.to_json.html_safe %>;
      <% else %>
        Def.pageLoadData_ = null;
      <% end %>
      
      <%if @form.form_name == 'change_profile'%>
        Def.ChangeProfile.originalQuestion() ;
      <% end %>
    }
    catch (e) {
      Def.Logger.logException(e);
      throw e;
    }
  };
  document.observe('dom:loaded', loadData);
</script>
